import { useState } from 'react';
import { useDispatch } from 'react-redux';
import { setError } from '../../redux/slices/notificationsSlice';
import axios from 'axios';
import Logo from '../../others/Logo';

const Registration = ({ onSwitch, onClose }) => {
  const [form, setForm] = useState({
    username: '',
    name: '',
    password: '',
  });

  const dispatch = useDispatch();

  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const onSubmitHandler = async (event) => {
    event.preventDefault();
    if (!form.username || !form.password) {
      dispatch(setError('–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è'));
      return;
    }
    console.log(form);
    try {
      const res = await axios.post(
        'http://localhost:5000/auth/registration/',
        form
      );
      onClose();
      console.log('–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ', res.data);
    } catch (error) {
      dispatch(
        setError(
          error.response?.data?.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
        )
      );
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
    }
  };

  return (
    <div className="authorization">
      <Logo />

      <p className="registration-form__text form-text">
        –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É —Ü–µ–Ω–∏—Ç–µ–ª–µ–π –ø–∞—Ü–∞–Ω—Å–∫–∏—Ö —Ü–∏—Ç–∞—Ç –î–∂–µ–π—Å–æ–Ω–∞ –°—Ç–µ—Ç—Ö—ç–º–∞!
        –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –º—É–¥—Ä—ã–µ –º—ã—Å–ª–∏ –∏–ª–∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã, –∫–æ—Ç–æ—Ä—ã–º–∏ —Ç—ã —Ö–æ—á–µ—à—å
        –ø–æ–¥–µ–ª–∏—Ç—å—Å—è ‚Äî –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å. –ó–¥–µ—Å—å –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç –≤–Ω–µ—Å—Ç–∏ —Å–≤–æ—é –ª–µ–ø—Ç—É –≤
        –∏—Å–∫—É—Å—Å—Ç–≤–æ —Å—É—Ä–æ–≤—ã—Ö –∞—Ñ–æ—Ä–∏–∑–º–æ–≤. üì¢ <br />
        <br />
        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∏ –¥–æ–±–∞–≤–ª—è–π —Ü–∏—Ç–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞—Å—Ç–∞–≤—è—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –¥–∞–∂–µ
        —Å–∞–º–æ–≥–æ –±—ã–≤–∞–ª–æ–≥–æ –º—É–∂–∏–∫–∞. üî• –û—Ü–µ–Ω–∏–≤–∞–π –∏ —Å–æ—Ö—Ä–∞–Ω—è–π –ª—É—á—à–∏–µ –∏–∑—Ä–µ—á–µ–Ω–∏—è. üí¨
        –î–µ–ª–∏—Å—å –º—É–¥—Ä–æ—Å—Ç—å—é —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏. –í–æ–π–¥–∏ –≤ –∫—Ä—É–≥ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö ‚Äî
        —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å! üöÄ
      </p>
      <form
        className="registration-form authorization-form"
        onSubmit={onSubmitHandler}
      >
        <input
          className="registration-form__login form-login"
          name="username"
          placeholder="–£–∫–∞–∂–∏—Ç–µ –ª–æ–≥–∏–Ω"
          type="text"
          onChange={handleChange}
          value={form.username}
        />
        <input
          className="registration-form__name form-name"
          name="name"
          placeholder="–í–∞—à–µ –∏–º—è"
          type="text"
          onChange={handleChange}
          value={form.name}
        />
        <input
          className="registration-form__password form-password"
          name="password"
          placeholder="–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
          type="password"
          onChange={handleChange}
          value={form.password}
        />
        <button className="registration-form__btn form-btn" type="submit">
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </button>
        <span className="another-form" onClick={onSwitch}>
          –£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç
        </span>
      </form>
    </div>
  );
};

export default Registration;
